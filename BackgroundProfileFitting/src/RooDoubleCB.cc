/*****************************************************************************
* Project: RooFit *
* *
* This code was autogenerated by RooClassFactory *
*****************************************************************************/
// Your description goes here...
#include "Riostream.h"
#include "RooDoubleCB.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include <math.h>
#include "TMath.h"
//ClassImp(RooDoubleCB)
RooDoubleCB::RooDoubleCB(const char *name, const char *title,
RooAbsReal& _x,
RooAbsReal& _mean,
RooAbsReal& _sigma,
RooAbsReal& _alpha1,
RooAbsReal& _n1,
RooAbsReal& _alpha2,
RooAbsReal& _n2) :
RooAbsPdf(name,title),
x("x","x",this,_x),
mean("mean","mean",this,_mean),
sigma("sigma","sigma",this,_sigma),
alpha1("alpha1","alpha1",this,_alpha1),
n1("n1","n1",this,_n1),
alpha2("alpha2","alpha2",this,_alpha2),
n2("n2","n2",this,_n2)
{
}
RooDoubleCB::RooDoubleCB(const RooDoubleCB& other, const char* name) :
RooAbsPdf(other,name),
x("x",this,other.x),
mean("mean",this,other.mean),
sigma("sigma",this,other.sigma),
alpha1("alpha1",this,other.alpha1),
n1("n1",this,other.n1),
alpha2("alpha2",this,other.alpha2),
n2("n2",this,other.n2)
{
}
Double_t RooDoubleCB::evaluate() const
{
double t = (x-mean)/sigma;
double val = -99.;
if(t>-alpha1 && t<alpha2){
val = exp(-0.5*t*t);
}else if(t<=-alpha1){
double alpha1invn1 = alpha1/n1;
val = exp(-0.5*alpha1*alpha1)*pow(1. - alpha1invn1*(alpha1+t), -n1);
}else if(t>=alpha2){
double alpha2invn2 = alpha2/n2;
val = exp(-0.5*alpha2*alpha2)*pow(1. - alpha2invn2*(alpha2-t), -n2);
}
return val ;
}

